#********************************************************************
# Wrapper Properties
#********************************************************************

# wrapper.debug=TRUE
set.default.DIR_HOME = ..
set.default.DIR_BASE = ..
set.default.DIR_CONF = %DIR_BASE%/conf
set.default.DIR_DATA = %DIR_BASE%/logs
wrapper.working.dir = .

# Java Application
wrapper.java.command = java

# Java Main class.  This class must implement the WrapperListener interface
#  or guarantee that the WrapperManager class is initialized.  Helper
#  classes are provided to do this for you.  See the Integration section
#  of the documentation for details.
wrapper.java.mainclass = org.tanukisoftware.wrapper.WrapperSimpleApp

# Java Classpath (include wrapper.jar)  Add class path elements as
#  needed starting from 1
wrapper.java.classpath.1 = %DIR_HOME%/bin/wrapper.jar
wrapper.java.classpath.2 = %DIR_HOME%/lib/*.jar
wrapper.java.classpath.3 = %DIR_HOME%/conf
wrapper.java.classpath.4 = %DIR_HOME%/lib/*.dll
wrapper.java.classpath.5 = %DIR_HOME%/lib/*.lib


# Java Library Path (location of Wrapper.DLL or libwrapper.so)
wrapper.java.library.path.1 = %DIR_HOME%/bin

# Java Additional Parameters
# note that n is the parameter number starting from 1.
wrapper.java.additional.1 = -Dgskk.home="%DIR_HOME%"
wrapper.java.additional.2 = -Dgskk.base="%DIR_BASE%"
wrapper.java.additional.3 = -Dgskk.conf="%DIR_CONF%"
wrapper.java.additional.4 = -Dgskk.data="%DIR_DATA%"

# Uncomment to enable YourKit profiling
#wrapper.java.additional.n=-Xrunyjpagent

# Uncomment to enable remote debugging
#wrapper.java.additional.n=-Xdebug -Xnoagent -Djava.compiler=NONE
#wrapper.java.additional.n=-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005

# Initial Java Heap Size (in MB)
wrapper.java.initmemory = 256

# Maximum Java Heap Size (in MB)
wrapper.java.maxmemory = 1024

# Application parameters.  Add parameters as needed starting from 1
wrapper.app.parameter.1 = cc.admin.CcAdminApplication
wrapper.app.parameter.2 = start

#********************************************************************
# Wrapper Logging Properties
#********************************************************************
# Format of output for the console.  (See docs for formats)
wrapper.console.format = PM

# Log Level for console output.  (See docs for log levels)
wrapper.console.loglevel = INFO

# Log file to use for wrapper output logging.
wrapper.logfile = %DIR_DATA%/wrapper.log

# Format of output for the log file.  (See docs for formats)
wrapper.logfile.format = LPTM

# Log Level for log file output.  (See docs for log levels)
wrapper.logfile.loglevel = INFO

# Maximum size that the log file will be allowed to grow to before
#  the log is rolled. Size is specified in bytes.  The default value
#  of 0, disables log rolling.  May abbreviate with the 'k' (kb) or
#  'm' (mb) suffix.  For example: 10m = 10 megabytes.
wrapper.logfile.maxsize = 10m

# Maximum number of rolled log files which will be allowed before old
#  files are deleted.  The default value of 0 implies no limit.
wrapper.logfile.maxfiles = 10

# Log Level for sys/event log output.  (See docs for log levels)
wrapper.syslog.loglevel = NONE

#********************************************************************
# Wrapper Windows Properties
#********************************************************************
# Title to use when running as getHardWareId console
wrapper.console.title = cc-admin-api-module-system

#********************************************************************
# Wrapper Windows NT/2000/XP Service Properties
#********************************************************************
# WARNING - Do not modify any of these properties when an application
#  using this configuration file has been installed as getHardWareId service.
#  Please uninstall the service before modifying this section.  The
#  service can then be reinstalled.

# Name of the service
wrapper.ntservice.name = cc-admin-api-module-system

# Display name of the service
wrapper.ntservice.displayname = cc-admin-api-module-system

# Description of the service
wrapper.ntservice.description = cc-admin-api-module-system

# Service dependencies.  Add dependencies as needed starting from 1
wrapper.ntservice.dependency.1 =

# Mode in which the service is installed.  AUTO_START or DEMAND_START
  wrapper.ntservice.starttype=AUTO_START

# Allow the service to interact with the desktop.
wrapper.ntservice.interactive = false
